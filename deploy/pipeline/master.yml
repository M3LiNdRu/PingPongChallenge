trigger:
- master

pool:
  vmImage: 'ubuntu-18.04' # examples of other options: 'macOS-10.15', 'windows-2019'

variables:
  BuildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    version: '3.0.x'
    packageType: runtime

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    includeNuGetOrg: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet build $(BuildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish $(BuildConfiguration)'
  inputs:
    command: publish
    publishWebProjects: False
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
- task: PublishPipelineArtifact@1
  displayName: 'publish pipeline artifact'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'PingPongChallenge'
